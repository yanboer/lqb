package com.yb.lqb.sixlqb;

/**
 * 加法变乘法
 * <p>
 * 我们都知道：1+2+3+ ... + 49 = 1225
 * 现在要求你把其中两个不相邻的加号变成乘号，使得结果为2015
 * <p>
 * 比如：
 * 1+2+3+...+10*11+12+...+27*28+29+...+49 = 2015
 * 就是符合要求的答案。
 * <p>
 * 请你寻找另外一个可能的答案，并把位置靠前的那个乘号左边的数字提交（对于示例，就是提交10）。
 * <p>
 * 注意：需要你提交的是一个整数，不要填写任何多余的内容。
 */


/**
 * 2015 - 1225 = 790
 * <p>
 * 所以：a * b + c * d - a - b - c - d = 790 即可。
 * <p>
 * a * (a + 1) + b * (b + 1) - a - (a + 1) - b - (b + 1) = 790
 * <p>
 * 1 <= a < b <= 49            ====> 输出 a 即可
 */
public class Demo06_2 {

    public static void main(String[] args) {


        int a = 0;
        int b = 0;       //记录 'x' 的结果

        for (int i = 1; i < 50; i++) {              // i 代表第一个 'x' 号左边位置数字
            a = i * (i + 1) - ((i) + (i + 1));

            for (int j = 1; j < 50; j++) {          // j 代表第二个 'x' 号左边位置数字
                b = a - ((j) + (j + 1)) + j * (j + 1);

                if (b == 790) {
                    System.out.println(i + " " + j);
                }
            }
        }
    }
}


